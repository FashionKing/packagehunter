{
  "name": "Packagehunter",
  "tagline": "Hunt down all package information",
  "body": "### Specs\r\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.nisrulz/packagehunter/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.github.nisrulz/packagehunter)\r\n\r\n### Featured in\r\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-PackageHunter-green.svg?style=true)](https://android-arsenal.com/details/1/3815) [![AndroidDev Digest](https://img.shields.io/badge/AndroidDev%20Digest-%23101-blue.svg)](https://www.androiddevdigest.com/digest-101/)\r\n\r\n### Show some :heart:\r\n[![GitHub stars](https://img.shields.io/github/stars/nisrulz/packagehunter.svg?style=social&label=Star)](https://github.com/nisrulz/packagehunter) [![GitHub forks](https://img.shields.io/github/forks/nisrulz/packagehunter.svg?style=social&label=Fork)](https://github.com/nisrulz/packagehunter/fork) [![GitHub watchers](https://img.shields.io/github/watchers/nisrulz/packagehunter.svg?style=social&label=Watch)](https://github.com/nisrulz/packagehunter) [![GitHub followers](https://img.shields.io/github/followers/nisrulz.svg?style=social&label=Follow)](https://github.com/nisrulz)  \r\n[![Twitter Follow](https://img.shields.io/twitter/follow/nisrulz.svg?style=social)](https://twitter.com/nisrulz) \r\n\r\n\r\nAndroid library to hunt down package information.\r\n\r\nThe library is built for simplicity and approachability. It not only eliminates most boilerplate code for dealing with package information, but also provides an easy and simple API to retrieve them and associated data.\r\n\r\n# Changelog\r\n\r\nStarting with `1.1.0`, Changes exist in the [releases tab](https://github.com/nisrulz/packagehunter/releases).\r\n\r\n# Including in your project\r\n- PackageHunter is available in the MavenCentral, so getting it as simple as adding it as a dependency\r\n```gradle\r\ncompile 'com.github.nisrulz:packagehunter:1.1.0'\r\n```\r\n\r\n### Usage\r\nCreate an instance of `PackageHunter`\r\n```java\r\nPackageHunter packageHunter = new PackageHunter(context);\r\n```\r\nNext call an available function on the ***packageHunter*** instance such as\r\n```java\r\nString appName= packageHunter.getAppNameForPkg(packageName);\r\n```\r\n\r\n## To get information from \r\n\r\n### Specific Package\r\nTo get information for a specific `packageName` , you have the following methods available to you\r\n\r\n|Value|functionName|returns\r\n|---|---|---|\r\n|Application Name|`getAppNameForPkg(packageName)`|String\r\n|Version|`getVersionForPkg(packageName)`|String \r\n|Version Code|`getVersionCodeForPkg(packageName)`|String\r\n|First install time(ms)|`getFirstInstallTimeForPkg(packageName)`|long  \r\n|Last update time(ms)|`getLastUpdatedTimeForPkg(packageName)`|long \r\n|Icon|`getIconForPkg(packageName)`|Drawable\r\n|All Permissions|`getPermissionForPkg(packageName)`|String[] \r\n|All Services|`getServicesForPkg(packageName)`|String[] \r\n|All Providers|`getProvidersForPkg(packageName)`|String[] \r\n|All Receivers|`getReceiverForPkg(packageName)`|String[] \r\n|All Activities|`getActivitiesForPkg(packageName)`|String[]\r\n\r\n\r\n### All Packages in Device\r\nIf you want to get the info about whole list of installed applications\r\n\r\n```java\r\nArrayList<PkgInfo> pkgInfoArrayList = packageHunter.getInstalledPackages()\r\n```\r\nwhich will provide you a list of `PkgInfo` objects each having\r\n 1. Application Name\r\n 1. Package Name\r\n 1. Version\r\n 1. Version Code\r\n 1. First install time\r\n 1. Last install time\r\n\r\n### Search for a Package\r\nIf you would instead like to search for a package which has a certain feature in all installed packages, you would have to call the below function with a flag.\r\n\r\n```java\r\nArrayList<PkgInfo> pkgInfoArrayList = packageHunter.searchInList(query, flag);\r\n```\r\nwhere flag can be \r\n\r\n|Flag|Search in feature\r\n|---|---|\r\n|`PackageHunter.APPLICATIONS`|Application Name \r\n|`PackageHunter.PACKAGES`|Package Name \r\n|`PackageHunter.PERMISSIONS`|Permissions \r\n|`PackageHunter.SERVICES`|Services \r\n|`PackageHunter.RECEIVERS`|Receivers \r\n|`PackageHunter.ACTIVITIES`|Activities \r\n|`PackageHunter.PROVIDERS`|Providers \r\n\r\n> Checkout the sample app for demo.\r\n\r\n\r\n# Pull Requests\r\nI welcome and encourage all pull requests. It usually will take me within 24-48 hours to respond to any issue or request. Here are some basic rules to follow to ensure timely addition of your request:\r\n  1. Match coding style (braces, spacing, etc.) This is best achieved using `CMD`+`Option`+`L` (Reformat code) on Mac (not sure for Windows) with Android Studio defaults.\r\n  2. If its a feature, bugfix, or anything please only change code to what you specify.\r\n  3. Please keep PR titles easy to read and descriptive of changes, this will make them easier to merge :)\r\n  4. Pull requests _must_ be made against `develop` branch. Any other branch (unless specified by the maintainers) will get rejected.\r\n  5. Check for existing [issues](https://github.com/nisrulz/packagehunter/issues) first, before filing an issue.  \r\n  6. Have fun!\r\n\r\n### Created & Maintained By\r\n[Nishant Srivastava](https://github.com/nisrulz) ([@nisrulz](https://www.twitter.com/nisrulz))\r\n\r\nLicense\r\n=======\r\n\r\n    Copyright 2016 Nishant Srivastava\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}